Program 3 : Demonstrate the working of matrix using R Programming

AIM:
To demonstrate the working of matrix using R programming.

Algorithm:
Step 1: Start the process.
Step 2: Open RStudio and open a new file.
Step 3: Select “Source on Save” check box on the toolbar.
Step 4: Declare the matrix.
Step 5: Access the particular rows and columns.
Step 6: Perform arithmetic operations on matrices.
Step 7: Perform transpose of matrix.
Step 8: Copy the code & paste it in the Console and run it.
Step 9: Save the file.
Step 10: Stop the process.

Coding:
#Matrix a
a <- matrix(c(1,2,3,4,5,6), nrow = 2 , ncol = 3)
print(a)
#Matrix a
b<- matrix(c(1,2,3,4,5,6), nrow = 2, ncol = 3)
print(b)
#add
print(a+b)
#sub
print(a-b)
#mut
print(a*b)
#div
print(a/b)
#Transpose of Matrix in a
print(t(a))
print(colSums(a))
print(colMeans(a))
print(rowSums(a))
print(rowMeans(a))
#Transpose of Matrix in a and b
print(cbind(a,b))
print(rbind(a,b))


Output

> #Matrix a
> a <- matrix(c(1,2,3,4,5,6), nrow = 2 , ncol = 3)
> print(a)
     [,1] [,2] [,3]
[1,]    1    3    5
[2,]    2    4    6
> #Matrix a
> b<- matrix(c(1,2,3,4,5,6), nrow = 2, ncol = 3)
> print(b)
     [,1] [,2] [,3]
[1,]    1    3    5
[2,]    2    4    6
> #add
> print(a+b)
     [,1] [,2] [,3]
[1,]    2    6   10
[2,]    4    8   12
> #sub
> print(a-b)
     [,1] [,2] [,3]
[1,]    0    0    0
[2,]    0    0    0
> #mut
> print(a*b)
     [,1] [,2] [,3]
[1,]    1    9   25
[2,]    4   16   36
> #div
> print(a/b)
     [,1] [,2] [,3]
[1,]    1    1    1
[2,]    1    1    1
> #Transpose of Matrix in a
> print(t(a))
     [,1] [,2]
[1,]    1    2
[2,]    3    4
[3,]    5    6
> print(colSums(a))
[1]  3  7 11
> print(colMeans(a))
[1] 1.5 3.5 5.5
> print(rowSums(a))
[1]  9 12
> print(rowMeans(a))
[1] 3 4
> #Transpose of Matrix in a and b
> print(cbind(a,b))
     [,1] [,2] [,3] [,4] [,5] [,6]
[1,]    1    3    5    1    3    5
[2,]    2    4    6    2    4    6
> print(rbind(a,b))
     [,1] [,2] [,3]
[1,]    1    3    5
[2,]    2    4    6
[3,]    1    3    5
[4,]    2    4    6

RESULT:
The above program executed and output is verified successfully
